#include<bits/stdc++.h>
#include<iomanip>
using namespace  std;

int main()
{

    // matrix:

    //    vector< vector<int>> my_matrix(3,vector<int>(4)); // this is 3(row) X 4(col) matrix

    //    typedef vector<int> Row;
    //    typedef vector<Row> Matrix;
    //    Matrix my_matrix(3,Row(4));


    // vector 2d
    vector< vector<int> > v{ { 4,5, 3, 10 }, // initializing 2D vector with values.
                             { 2, 7, 11 },
                             { 3, 2, 1, 12 } };



    cout << "\n Now for 2d vector without 'at': " <<endl;
    for ( int n = 0; n < v.size(); ++n) {
        for ( int m = 0; m < v[n].size(); ++m )
        {
            cout << v[n][m]<<"\t";
        }
        cout << endl;
    }

    vector<vector<int> > stuff;

    for(int i = 0; i < 3; i++)
    {
        vector<int> temp;
        for(int j =0; j < 3; j++)
        {
            temp.push_back(i);
        }
        stuff.push_back(temp);
    }

    cout << "\n New stuff : " <<endl;
    for ( int n = 0; n < stuff.size(); n++) {
        for ( int m = 0; m < stuff[n].size(); m++ )
        {
            cout << stuff[n][m]<<"\t";
        }
        cout << endl;
    }

    //    vector<int,  vector<int>> my_matrix(3,vector<int>(4)); // this is 3(row) X 4(col) matrix

    //    typedef vector<int> Row;
    //    typedef vector<Row> Matrix;
    //    Matrix my_matrix(3,Row(4));

    // Create a vector with 5 elements
    vector<int> v2; //(5, 1);// here -> ** change 1 to 9 = v2(NoOfRow,_digitToChange)
    v2.push_back(4);
    v2.push_back(1);
    v2.push_back(7);
    v2.push_back(9);
    v2.push_back(1);


    // Create a vector of 3 elements.
    //vector< vector<int> > v2d2(7, vector<int>(5,1));// here -> ** change (7 col, v2 = v2(NoOfCol,vector1)
    vector< vector<int> > v2d2(7, v2);// here -> ** change (7 col, v2 = v2(NoOfCol,vector1)
    // Print out the elements
    cout << "Before Vector Update" << endl;
    for (int i = 0; i < v2d2.size(); i++)
    {
        for (int j = 0; j < v2d2[i].size(); j++)
        {
            cout << v2d2[i][j] << " ";
        }
        cout << endl;
    }

    cout << "" << endl;
    cout << "Vector Update" << endl;
    cout << "" << endl;

    cout << "After Vector Update" << endl;
    for (int i = 0; i < v2d2.size(); i++)
    {
        for (int j = 0; j < v2d2[i].size(); j++)
        {
            if (v2d2[i][j] == 1)
            {
                v2d2[i][j] = 9;
            }
            cout << v2d2[i][j] << " ";
        }
        cout << endl;
    }

    cout << "\n\n\n\n--------------New Era-----------"<< endl;

    //    vector< vector<int>> my_matrix(3,vector<int>(4)); // this is 3(row) X 4(col) matrix

    //    typedef vector<int> Row;
    //    typedef vector<Row> Matrix;
    //    Matrix my_matrix(3,Row(4));


    //vector<char> v1(5, 'R');
    vector<char> v1;
    v1.push_back('R');
    v1.push_back('A');
    v1.push_back('R');
    v1.push_back('I');

    // you can only have only 1 (index, vector)

    vector< vector<char> > vec_2(4, v1);

    for (int i = 0; i < vec_2.size(); i++)
    {
        for (int j = 0; j < vec_2[i].size(); j++)
        {
            cout << vec_2[i][j] << " ";
        }
        cout << endl;
    }
    cout << "" << endl;
    cout << "All R replaced with S" << endl;
    cout << "" << endl;
    for (int i = 0; i < vec_2.size(); i++)
    {
        for (int j = 0; j < vec_2[i].size(); j++)
        {
            if (vec_2[i][j] == 'R')
            {
                vec_2[i][j] = 'S';
            }
            cout << vec_2[i][j] << " ";
        }
        cout << endl;
    }


    cout << "\nvector< vector<int>> my_matrix(3,vector<int>(4)); \n this is 3(row) X 4(col) matrix"<< endl;

    typedef vector<int> Row;
    typedef vector<Row> Matrix;
    Matrix my_matrix(4,Row(6));


    for (int i = 0; i < my_matrix.size(); i++)
    {
        for (int j =0; j < my_matrix[i].size(); j++)
        {
            cout << my_matrix[i][j] << " ";
        }
        cout << endl;
    }


    cout << "\n\n\n\n-----------------------"<< endl;
    //std::vector<int> (4, 1);//Will create a vector of 4 integers whose values will be 1.
    //vector< vector<int>> my_matrix(3,vector<int>(4)); // this is 3(row) X 4(col) matrix
    std::vector <std::vector<int> > vec2D(5, std::vector<int>(7,1));

    for(auto vec : vec2D)
    {
        for(auto x : vec)
            std::cout<<x<<" ";

        std::cout << std::endl;
    }

    std::cout << std::endl;

    for(int i = 0; i < 5; i++)
        for(int j = 0; j < 5; j++)
            vec2D[i][j] = i*j;

    for(auto vec : vec2D)
    {
        for(auto x : vec)
            std::cout<<x<<" ";

        std::cout << std::endl;
    }
    cout << "\n\nAdding push_back\n"<<endl;

    //Adding a new row in 2D vector
    vec2D.push_back(std::vector<int>(5, 11));

    cout <<endl;

    for(auto vec : vec2D)
    {
        for(auto x : vec)
            std::cout<<x<<" , ";

        std::cout << std::endl;
    }
    std::cout << std::endl;

    return 0;
}
