#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<iterator>
#include <conio.h>
#include<cctype>
#include<numeric>
#include <math.h>
#include <random>
#include <functional>
using namespace std;

template<class Container>
void write_to_count(const Container& container, const char* delimiter = " ")
{
	std::copy(container.begin(), container.end(),
		std::ostream_iterator<Container::value_type>(std::cout, delimiter));
}

int main()
{

	std::vector<std::string> a = { "zero","one","two","three","four","five","six","seven","eight","nine","ten" };
	std::vector<std::string> b = { "0","1","2","3","4","5","6","7","8","9","10","11","12" };

	/*
	//Reverse
	std::cout << "Reverse - " << std::endl;
	write_to_count(a, " : ");
	std::cout << std::endl;
	
	std::reverse(a.begin(), a.end());
	write_to_count(a, " : ");
	std::cout << '\n';

	std::cout << "Reverse Copy - " << std::endl;
	write_to_count(b, " : ");
	std::cout << '\n';
	//Reverse_copy -> copy of reversed item.Creates copy of range that is reversed.
	std::reverse_copy(b.begin(), b.end(), b.begin());
	write_to_count(b, " : ");
	*/

	// Rotate
	std::cout << "Rotate - " << std::endl;
	write_to_count(a, " : ");
	std::cout << std::endl;
	std::rotate(a.begin(), a.begin() + 3, a.end());
	write_to_count(a, " : ");
	std::cout << std::endl;
	std::rotate(a.begin()+3, a.begin() + 5, a.begin()+8); // 5 is the new beginning
	write_to_count(a, " : ");
	std::cout << std::endl;

	//random shuffle
	std::cout << "Random shuffle - " << std::endl;
	std::mt19937 rng( std::random_device{}() );
	std::shuffle(a.begin(), a.end(), rng );
	write_to_count(a, " : ");
	std::cout << std::endl;
	
	while (!_kbhit());
	return 0;
}

